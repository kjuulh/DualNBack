{"version":3,"sources":["library/reducers/menu.ts","library/reducers/request.ts","library/reducers/auth.ts","library/reducers/counter.ts","library/reducers/activeField.ts","library/reducers/nback.ts","library/reducers/activeSound.ts","library/reducers/round.ts","library/reducers/field-attempt.ts","config/config.ts","services/scores.service.ts","library/reducers/scores.ts","services/socket.service.ts","library/reducers/score.ts","library/reducers/gameSettings.ts","library/reducers/sound-attempt.ts","components/navbar/Navbar.tsx","pages/home.page/HomePage.tsx","components/menu/Menu.tsx","services/auth.service.ts","library/reducers/register.ts","pages/register.page/RegisterPage.tsx","library/reducers/login.ts","pages/login.page/LoginPage.tsx","components/field/Field.tsx","components/grid/Grid.tsx","components/score/Score.tsx","components/progress/progress-bar/ProgressBar.tsx","components/game/Game.tsx","pages/game.page/GamePage.tsx","pages/scores.page/ScoresPage.tsx","components/body/Body.tsx","library/reducers/index.ts","library/store.ts","components/progress/Progress.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["menuSlice","createSlice","name","initialState","menuOpen","reducers","menuOpened","state","menuClosed","actions","reducer","requestSlice","requesting","finished","success","failed","message","redirect","requested","action","payload","error","reset","token","id","loggedIn","authSlice","authenticated","cleared","logout","dispatch","a","async","Request","count","counterSlice","increment","field","activeFieldSlice","setActiveField","n","nBackSlice","set","sound","activeSoundSlice","setActiveSound","window","speech","speechSynthesis","langRegex","voice","getVoices","filter","test","lang","console","warn","utterance","SpeechSynthesisUtterance","pitch","rate","volume","speak","rounds","roundSlice","add","addRound","size","getState","Counter","NBack","Math","floor","random","round","attempts","fieldAttemptSlice","nback","stateField","find","attempt","attempted","Config","serverUrl","environment","process","socketUrl","scoresService","url","getScores","Axios","get","response","data","this","scores","gettingScores","gotScores","scoresSlice","failure","toString","SocketService","socket","io","connect","emit","on","record","GameRunningState","score","scoreSlice","soundAttemptSlice","runTime","session","Finished","widthHeight","timerDuration","gameSettingsSlice","start","Running","Navbar","useDispatch","history","useHistory","useSelector","Auth","resetGame","log","ActiveField","ActiveSound","FieldAttempt","Round","Score","SoundAttempt","className","onClick","to","Menu","setTimeout","push","style","cursor","HomePage","close","opacity","visibility","AuthService","registerUser","post","res","status","login","registerSlice","registering","registered","RegisterSchema","Yup","shape","username","required","min","email","password","RegisterPage","goBack","initialValues","validationSchema","onSubmit","values","touched","errors","placeholder","type","loggingIn","loginSlice","LoginSchema","LoginPage","user","Field","props","number","index","active","key","Grid","fields","i","rows","columns","gridTemplateRows","gridTemplateColumns","map","fieldAttempts","soundAttempts","useEffect","s","forEach","Settings","addGame","jwt","ProgressBar","indeterminate","width","progress","timed","transition","duration","Game","barProgress","uuid","v4","timerReset","clearInterval","setInterval","beginGame","nbackRound","r","GamePage","ScoresPage","integrateCallbacks","Scores","margin","length","Body","openSocket","path","combineReducers","Register","Login","middleware","getDefaultMiddleware","store","configureStore","Reducers","devTools","Progress","request","resetMessage","renderText","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.29800bbb.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst menuSlice = createSlice({\n  name: 'menu',\n  initialState: {\n    menuOpen: false,\n  },\n  reducers: {\n    menuOpened: (state) => ({ ...state, menuOpen: true }),\n    menuClosed: (state) => ({ ...state, menuOpen: false }),\n  },\n});\n\nconst { actions, reducer } = menuSlice;\n\nexport const { menuOpened: menuOpened, menuClosed: menuClosed } = actions;\nexport default reducer;\n","import { createSlice, PayloadAction, createReducer } from '@reduxjs/toolkit';\nimport * as Register from './register';\n\nexport interface RequestState {\n  requesting: boolean;\n  finished: boolean;\n  success: boolean;\n  failed: boolean;\n  message: string;\n  redirect: string;\n}\n\nconst initialState: RequestState = {\n  requesting: false,\n  finished: false,\n  success: false,\n  failed: false,\n  message: '',\n  redirect: '',\n};\n\nconst requestSlice = createSlice({\n  name: 'request',\n  initialState,\n  reducers: {\n    requested: (\n      state: RequestState,\n      action: PayloadAction<{ redirect: string }>,\n    ) => ({\n      ...state,\n      requesting: true,\n      finished: false,\n      success: false,\n      failed: false,\n      message: '',\n      redirect: action.payload.redirect,\n    }),\n    finished: (\n      state: RequestState,\n      action: PayloadAction<{ message: string }>,\n    ) => ({\n      ...state,\n      requesting: false,\n      success: true,\n      finished: true,\n      message: action.payload.message,\n    }),\n    error: (state: RequestState, action: PayloadAction<{ error: string }>) => ({\n      ...state,\n      requesting: false,\n      finished: true,\n      success: false,\n      failed: true,\n      message: action.payload.error,\n    }),\n    reset: (state: RequestState) => ({\n      requesting: false,\n      finished: false,\n      success: false,\n      failed: false,\n      message: '',\n      redirect: '',\n    }),\n  },\n});\n\nconst { reducer, actions } = requestSlice;\n\nexport const { requested, finished, error, reset } = actions;\nexport default reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport * as Request from './request';\n\nexport interface AuthState {\n  token: string;\n  id: string;\n  loggedIn: boolean;\n}\n\nconst initialState: AuthState = {\n  token: '',\n  id: '',\n  loggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    authenticated: (\n      state: AuthState,\n      action: PayloadAction<{ token: string; id: string }>,\n    ) => ({\n      ...action.payload,\n      loggedIn: true,\n    }),\n    cleared: (state: AuthState) => ({ ...initialState }),\n  },\n});\n\nconst { actions, reducer } = authSlice;\n\nexport const { authenticated, cleared } = actions;\n\nexport const logout = () => {\n  return async (dispatch: any) => {\n    dispatch(cleared());\n    dispatch(Request.finished({ message: \"You've logged out\" }));\n  };\n};\n\nexport default reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport interface CounterState {\n  count: number;\n}\n\nconst initialState: CounterState = {\n  count: 0,\n};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state: CounterState) => ({ count: state.count + 1 }),\n    reset: (state: CounterState) => initialState,\n  },\n});\n\nconst { actions, reducer } = counterSlice;\n\nexport const { increment, reset } = actions;\nexport default reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface ActiveFieldState {\n  field: number;\n}\n\nconst initialState: ActiveFieldState = {\n  field: 0,\n};\n\nconst activeFieldSlice = createSlice({\n  name: 'activeField',\n  initialState,\n  reducers: {\n    setActiveField: (\n      state: ActiveFieldState,\n      action: PayloadAction<number>,\n    ) => ({\n      field: action.payload,\n    }),\n    reset: (state: ActiveFieldState) => ({ ...initialState }),\n  },\n});\n\nconst { actions, reducer } = activeFieldSlice;\n\nexport const { setActiveField, reset } = actions;\nexport default reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport interface NBackState {\n  n: number;\n}\n\nconst initialState: NBackState = {\n  n: 1,\n};\n\nconst nBackSlice = createSlice({\n  name: 'nBack',\n  initialState,\n  reducers: {\n    set: (state: NBackState) => ({ n: state.n + 1 }),\n    reset: (state: NBackState) => ({ ...initialState }),\n  },\n});\n\nconst { actions, reducer } = nBackSlice;\n\nexport const { set, reset } = actions;\nexport default reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface ActiveSoundState {\n  sound: number;\n}\n\nconst initialState: ActiveSoundState = {\n  sound: 0,\n};\n\nconst activeSoundSlice = createSlice({\n  name: 'activeSound',\n  initialState,\n  reducers: {\n    setActiveSound: (\n      state: ActiveSoundState,\n      action: PayloadAction<number>,\n    ) => ({\n      sound: action.payload,\n    }),\n    reset: (state: ActiveSoundState) => ({ ...initialState }),\n  },\n});\n\nconst { actions, reducer } = activeSoundSlice;\nexport const { reset } = actions;\n\nexport default reducer;\n\nexport const setActiveSound = (sound: number) => {\n  const sounds = 'ABCDEFGHIJKLMNOPQRSTUVXYZ1234567890';\n\n  return async (dispatch: any) => {\n    dispatch(actions.setActiveSound(sound));\n    if ('speechSynthesis' in window) {\n      const speech = window.speechSynthesis;\n\n      var langRegex = /^en(-[a-z]{2})?$/i;\n\n      const voice = speech\n        .getVoices()\n        .filter((voice) => langRegex.test(voice.lang))[0];\n      console.warn(voice);\n      console.warn(speech.getVoices());\n\n      const utterance = new SpeechSynthesisUtterance(sounds[sound - 1]);\n\n      utterance.voice = voice;\n      utterance.pitch = 1;\n      utterance.rate = 1;\n      utterance.volume = 1;\n\n      speech.speak(utterance);\n    }\n  };\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { CounterState } from './counter';\nimport { setActiveField } from './activeField';\nimport { NBackState, set } from './nback';\nimport { setActiveSound } from './activeSound';\n\nexport interface Round {\n  round: number;\n  field: number;\n  sound: number;\n}\n\nexport interface RoundState {\n  rounds: Round[];\n}\n\nconst initialState: RoundState = {\n  rounds: [],\n};\n\nconst roundSlice = createSlice({\n  name: 'rounds',\n  initialState,\n  reducers: {\n    add: (state: RoundState, action: PayloadAction<Round>) => {\n      return {\n        rounds: [...state.rounds, action.payload],\n      };\n    },\n    reset: (state: RoundState) => ({ ...initialState }),\n  },\n});\n\nconst { actions, reducer } = roundSlice;\nexport const { add, reset } = actions;\nexport default reducer;\n\nexport const addRound = (size: number) => {\n  return async (dispatch: any, getState: any) => {\n    const state: { Counter: CounterState; NBack: NBackState } = getState();\n\n    const count = state.Counter.count;\n    const n = state.NBack.n;\n\n    const field = Math.floor(Math.random() * size ** 2) + 1;\n    const sound = Math.floor(Math.random() * size ** 2) + 1;\n\n    dispatch(\n      add({\n        round: count,\n        field,\n        sound,\n      }),\n    );\n    dispatch(setActiveField(field));\n    dispatch(setActiveSound(sound));\n\n    const cn = Math.floor(count / 10) + 1;\n    if (cn !== n) {\n      dispatch(set());\n    }\n  };\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RoundState } from './round';\nimport { ActiveFieldState } from './activeField';\nimport { NBackState } from './nback';\nimport { CounterState } from './counter';\n\nexport interface FieldAttempt {\n  round: number;\n  nback: number;\n  success: boolean;\n  attempted: boolean;\n}\n\nexport interface FieldAttemptState {\n  attempts: FieldAttempt[];\n}\n\nconst initialState: FieldAttemptState = {\n  attempts: [],\n};\n\nconst fieldAttemptSlice = createSlice({\n  name: 'field-attempt',\n  initialState,\n  reducers: {\n    add: (\n      state: FieldAttemptState,\n      action: PayloadAction<{ round: number; nback: number; success: boolean }>,\n    ) => {\n      const { round, nback, success } = action.payload;\n\n      const stateField = state.attempts.find(\n        (attempt) => attempt.round == round,\n      );\n\n      if (stateField == null || stateField.attempted == false) {\n        return {\n          attempts: [\n            ...state.attempts,\n            {\n              round,\n              nback,\n              success,\n              attempted: true,\n            },\n          ],\n        };\n      }\n    },\n    reset: (state: FieldAttemptState) => initialState,\n  },\n});\n\nconst { actions, reducer } = fieldAttemptSlice;\n\nexport const { reset } = actions;\nexport default reducer;\n\nexport const attempt = () => {\n  return async (dispatch: any, getState: any) => {\n    const state: {\n      Round: RoundState;\n      FieldAttempt: FieldAttemptState;\n      ActiveField: ActiveFieldState;\n      NBack: NBackState;\n      Counter: CounterState;\n    } = getState();\n\n    const field = state.ActiveField.field;\n    const round = state.Counter.count;\n    const nback = state.NBack.n;\n    const nbackRound = state.Round.rounds.find((r) => r.round == round - nback);\n\n    if (nbackRound) {\n      dispatch(\n        actions.add({\n          round,\n          nback,\n          success: nbackRound.field == field,\n        }),\n      );\n    }\n  };\n};\n","export class Config {\n  public static environment = process.env.REACT_APP_ENVIRONMENT;\n  public static serverUrl =\n    Config.environment == 'production'\n      ? 'https://itweb-g12-a3-api.herokuapp.com'\n      : Config.environment == 'staging'\n      ? 'https://itweb-g12-a3-api-staging.herokuapp.com'\n      : 'http://localhost:8080';\n\n  public static socketUrl =\n    Config.environment == 'production'\n      ? 'ws://itweb-g12-a3-api.herokuapp.com'\n      : Config.environment == 'staging'\n      ? 'ws://itweb-g12-a3-api-staging.herokuapp.com'\n      : 'ws://localhost:8080';\n}\n","import { Score } from '../library/reducers/scores';\nimport Axios, { AxiosResponse } from 'axios';\nimport { Config } from '../config/config';\n\nexport default class ScoresService {\n  constructor() {\n    this.url = Config.serverUrl;\n  }\n\n  private url: string;\n\n  public getScores = async (): Promise<Score[]> => {\n    const response: AxiosResponse<Score[]> = await Axios.get(\n      this.url + '/scores/10',\n    );\n    return response.data;\n  };\n}\n\nexport const scoresService = new ScoresService();\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport * as Request from './request';\nimport { scoresService } from '../../services/scores.service';\nimport { AuthState } from './auth';\n\nexport interface Score {\n  score: number;\n  username: string;\n}\n\nexport interface ScoresState {\n  scores: Score[];\n  gettingScores: boolean;\n  gotScores: boolean;\n  error: string;\n}\n\nconst initialState: ScoresState = {\n  scores: [],\n  gettingScores: false,\n  gotScores: false,\n  error: '',\n};\n\nconst scoresSlice = createSlice({\n  name: 'scores',\n  initialState,\n  reducers: {\n    requested: (state: ScoresState) => ({\n      ...initialState,\n      gettingScores: false,\n      scores: state.scores,\n    }),\n    success: (\n      state: ScoresState,\n      action: PayloadAction<{ scores: Score[] }>,\n    ) => ({\n      ...initialState,\n      gotScores: true,\n      scores: action.payload.scores,\n    }),\n    failure: (state: ScoresState, action: PayloadAction<{ error: any }>) => ({\n      ...initialState,\n      error: action.payload.error,\n      scores: state.scores,\n    }),\n  },\n});\n\nconst { actions, reducer } = scoresSlice;\nexport default reducer;\n\nexport const getScores = () => {\n  return async (dispatch: any) => {\n    dispatch(actions.requested());\n\n    try {\n      const scores = await scoresService.getScores();\n      dispatch(actions.success({ scores }));\n    } catch (error) {\n      dispatch(actions.failure({ error: toString() }));\n    }\n  };\n};\n","import { Config } from '../config/config';\nimport io from 'socket.io-client';\nimport { getScores } from '../library/reducers/scores';\n\nexport class SocketService {\n  private static url = Config.serverUrl;\n  private static socket: any;\n\n  public static openSocket() {\n    this.socket = io.connect(this.url);\n  }\n  public static addGame(payload: {\n    jwt: string;\n    score: number;\n    session: string;\n  }) {\n    this.socket.emit('add-score', payload);\n  }\n  public static integrateCallbacks(dispatch: any) {\n    this.socket.on('score-updated', (record: any) => {\n      dispatch(getScores());\n    });\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SocketService } from '../../services/socket.service';\nimport { AuthState } from './auth';\nimport { GameSettingsState } from './gameSettings';\n\nexport interface ScoreState {\n  score: number;\n}\n\nconst initialState: ScoreState = {\n  score: 0,\n};\n\nconst scoreSlice = createSlice({\n  name: 'score',\n  initialState,\n  reducers: {\n    add: (state: ScoreState, action: PayloadAction<number>) => ({\n      score: action.payload,\n    }),\n    reset: (state: ScoreState) => initialState,\n  },\n});\n\nconst { actions, reducer } = scoreSlice;\nexport const { reset } = actions;\nexport default reducer;\n\nexport const add = (payload: number) => {\n  return async (dispatch: any, getState: any) => {\n    const state: {\n      Auth: AuthState;\n      Settings: GameSettingsState;\n    } = getState();\n\n    dispatch(actions.add(payload));\n\n    if ((state.Auth.loggedIn && state.Settings.session, state.Auth.id)) {\n      console.log('In here');\n      SocketService.addGame({\n        jwt: state.Auth.token,\n        score: payload,\n        session: state.Settings.session,\n      });\n    }\n  };\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { reset as timerReset, increment } from './counter';\nimport { add, addRound } from './round';\nimport uuid from 'uuid';\nimport * as ActiveField from './activeField';\nimport * as ActiveSound from './activeSound';\nimport * as Counter from './counter';\nimport * as FieldAttempt from './field-attempt';\nimport * as NBack from './nback';\nimport * as Round from './round';\nimport * as Score from './score';\nimport * as SoundAttempt from './sound-attempt';\n\nexport enum GameRunningState {\n  Running = 'running',\n  Finished = 'finished',\n}\n\nexport interface GameSettingsState {\n  session: string;\n  state: GameRunningState;\n  widthHeight: number;\n  timerDuration: number;\n}\n\nconst initialState: GameSettingsState = {\n  session: '',\n  state: GameRunningState.Finished,\n  widthHeight: 3,\n  timerDuration: 5,\n};\n\nconst gameSettingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    start: (\n      state: GameSettingsState,\n      action: PayloadAction<{\n        widthHeight: number;\n        timerDuration: number;\n        session: string;\n      }>,\n    ) => ({\n      widthHeight: action.payload.widthHeight,\n      timerDuration: action.payload.timerDuration,\n      state: GameRunningState.Running,\n      session: action.payload.session,\n    }),\n    finished: (state: GameSettingsState) => ({\n      ...initialState,\n    }),\n  },\n});\n\nconst { actions, reducer } = gameSettingsSlice;\n\nlet runTime: any;\n\nexport const { start, finished } = actions;\nexport default reducer;\n\nexport const beginGame = (size: number, timerDuration: number) => {\n  return async (dispatch: any, getState: any) => {\n    const state = getState();\n\n    const session = uuid.v4();\n    dispatch(start({ widthHeight: size, timerDuration, session }));\n    dispatch(timerReset());\n    if (typeof runTime !== 'undefined') {\n      clearInterval(runTime);\n    }\n    runTime = setInterval(() => {\n      dispatch(increment());\n      dispatch(addRound(size));\n    }, timerDuration * 1000);\n  };\n};\n\nexport const resetGame = () => {\n  return async (dispatch: any) => {\n    dispatch(finished());\n    dispatch(ActiveField.reset());\n    dispatch(ActiveSound.reset());\n    dispatch(Counter.reset());\n    dispatch(FieldAttempt.reset());\n    dispatch(NBack.reset());\n    dispatch(Round.reset());\n    dispatch(Score.reset());\n    dispatch(SoundAttempt.reset());\n  };\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RoundState } from './round';\nimport { ActiveFieldState } from './activeField';\nimport { NBackState } from './nback';\nimport { CounterState } from './counter';\nimport { ActiveSoundState } from './activeSound';\n\nexport interface SoundAttempt {\n  round: number;\n  nback: number;\n  success: boolean;\n  attempted: boolean;\n}\n\nexport interface SoundAttemptState {\n  attempts: SoundAttempt[];\n}\n\nconst initialState: SoundAttemptState = {\n  attempts: [],\n};\n\nconst soundAttemptSlice = createSlice({\n  name: 'sound-attempt',\n  initialState,\n  reducers: {\n    add: (\n      state: SoundAttemptState,\n      action: PayloadAction<{ round: number; nback: number; success: boolean }>,\n    ) => {\n      const { round, nback, success } = action.payload;\n\n      const stateField = state.attempts.find(\n        (attempt) => attempt.round == round,\n      );\n\n      if (stateField == null || stateField.attempted == false) {\n        return {\n          attempts: [\n            ...state.attempts,\n            {\n              round,\n              nback,\n              success,\n              attempted: true,\n            },\n          ],\n        };\n      }\n    },\n    reset: (state: SoundAttemptState) => initialState,\n  },\n});\n\nconst { actions, reducer } = soundAttemptSlice;\n\nexport const { reset } = actions;\nexport default reducer;\n\nexport const attempt = () => {\n  return async (dispatch: any, getState: any) => {\n    const state: {\n      Round: RoundState;\n      SoundAttempt: SoundAttemptState;\n      ActiveSound: ActiveSoundState;\n      NBack: NBackState;\n      Counter: CounterState;\n    } = getState();\n\n    const sound = state.ActiveSound.sound;\n    const round = state.Counter.count;\n    const nback = state.NBack.n;\n    const nbackRound = state.Round.rounds.find((r) => r.round == round - nback);\n\n    if (nbackRound) {\n      dispatch(\n        actions.add({\n          round,\n          nback,\n          success: nbackRound.sound == sound,\n        }),\n      );\n    }\n  };\n};\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './Navbar.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { menuClosed, menuOpened } from '../../library/reducers/menu';\nimport { logout } from '../../library/reducers/auth';\nimport * as GameSettings from '../../library/reducers/gameSettings';\n\nconst Navbar: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loggedIn } = useSelector((state: any) => state.Auth);\n\n  const resetGame = () => {\n    console.log('Game reset');\n    dispatch(GameSettings.resetGame());\n  };\n\n  return (\n    <div className='navbar base'>\n      <nav className='nav'>\n        <h3 className='logo' onClick={() => resetGame()}>\n          <Link to='/'>DNB</Link>\n        </h3>\n        {!useSelector((state: any) => state.Menu.menuOpen) ? (\n          <>\n            <ul className='actions'>\n              <li className='actions-play' onClick={() => resetGame()}>\n                <Link to='/play'>PLAY GAME</Link>\n              </li>\n              <li className='actions-scores' onClick={() => resetGame()}>\n                <Link to='/scores'>SCORES</Link>\n              </li>\n            </ul>\n            <ul className='user-actions'>\n              {loggedIn ? (\n                <li className='logout' onClick={() => resetGame()}>\n                  <a\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => dispatch(logout())}\n                  >\n                    LOGOUT\n                  </a>\n                </li>\n              ) : (\n                <>\n                  <li className='login' onClick={() => resetGame()}>\n                    <Link to='/login'>LOGIN</Link>\n                  </li>\n                  <li className='register' onClick={() => resetGame()}>\n                    <Link to='/register'>REGISTER</Link>\n                  </li>\n                </>\n              )}\n            </ul>\n            <span\n              className='menu'\n              onClick={() => {\n                dispatch(menuOpened());\n                resetGame();\n              }}\n            >\n              <div className='open-icon-base'>\n                <div className='icon-row'></div>\n              </div>\n            </span>\n          </>\n        ) : (\n          <span\n            className='close-menu'\n            onClick={() => {\n              dispatch(menuClosed());\n              resetGame();\n              setTimeout(() => {\n                history.push('/home');\n              }, 500);\n            }}\n          >\n            <div className='close-icon-base'></div>\n          </span>\n        )}\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport './HomePage.scss';\nimport { Config } from '../../config/config';\n\nexport const HomePage = () => {\n  return (\n    <div className='home-page'>\n      <div className='container'>\n        <h1 className='heading'>Home</h1>\n        <div className='content'>\n          <p>{process.env.REACT_APP_ENVIRONMENT}</p>\n          <p>{Config.serverUrl}</p>\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Laboriosam\n            enim tenetur similique aspernatur, impedit odit quisquam dolor\n            temporibus numquam dolores nam, amet, explicabo aliquid. Illum\n            mollitia beatae qui vel asperiores!\n          </p>\n          <p>\n            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ipsam nemo\n            sapiente recusandae eligendi, provident molestiae placeat laborum\n            est neque? Accusamus, eaque veritatis doloremque possimus\n            necessitatibus impedit nemo quis porro eligendi.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './Menu.scss';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { menuClosed } from '../../library/reducers/menu';\nimport { logout } from '../../library/reducers/auth';\n\nexport const Menu = () => {\n  const { menuOpen } = useSelector((state: any) => state.Menu);\n  const dispatch = useDispatch();\n\n  const close = () => dispatch(menuClosed());\n\n  const { loggedIn } = useSelector((state: any) => state.Auth);\n\n  return (\n    <div\n      className='menu-content'\n      style={{\n        opacity: menuOpen ? 1.0 : 0.0,\n        visibility: menuOpen ? 'visible' : 'hidden',\n      }}\n    >\n      <div className='container'>\n        <ul className='actions'>\n          <li className='actions-play'>\n            <Link to='/play' onClick={() => close()}>\n              PLAY GAME\n            </Link>\n          </li>\n          <li className='actions-scores'>\n            <Link to='/scores' onClick={() => close()}>\n              SCORES\n            </Link>\n          </li>\n        </ul>\n        <div className='divider'></div>\n\n        <ul className='user-actions'>\n          {loggedIn ? (\n            <li className='logout'>\n              <a\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  dispatch(logout());\n                  close();\n                }}\n              >\n                LOGOUT\n              </a>\n            </li>\n          ) : (\n            <>\n              <li className='login'>\n                <Link to='/login' onClick={() => close()}>\n                  LOGIN\n                </Link>\n              </li>\n              <li className='register'>\n                <Link to='/register' onClick={() => close()}>\n                  REGISTER\n                </Link>\n              </li>\n            </>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import Axios, { AxiosResponse } from 'axios';\nimport { Config } from '../config/config';\n\nexport interface RegisterUserData {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface RegisteredUserData {\n  id: string;\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface LoginUserData {\n  username: string;\n  password: string;\n}\n\nexport interface LoggedInUserData {\n  id: string;\n  token: string;\n}\n\nexport interface ErrorResponse {\n  status: string;\n}\n\nexport class AuthService {\n  private static url = Config.serverUrl;\n\n  public static registerUser = async (\n    data: RegisterUserData,\n  ): Promise<RegisteredUserData> => {\n    try {\n      const res: AxiosResponse<RegisteredUserData> = await Axios.post(\n        AuthService.url + '/register',\n        data,\n      );\n      return res.data;\n    } catch (error) {\n      if (\n        error.response &&\n        error.response.status === 400 &&\n        error.response.data.status\n      ) {\n        throw error.response.data.status;\n      }\n      throw error;\n    }\n  };\n\n  public static login = async (\n    data: LoginUserData,\n  ): Promise<LoggedInUserData> => {\n    try {\n      const res: AxiosResponse<LoggedInUserData> = await Axios.post(\n        AuthService.url + '/authenticate',\n        data,\n      );\n      return res.data;\n    } catch (error) {\n      if (\n        error.response &&\n        error.response.status === 400 &&\n        error.response.data.status\n      ) {\n        throw error.response.data.status;\n      }\n      throw error;\n    }\n  };\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AuthService } from '../../services/auth.service';\nimport * as Request from './request';\n\nexport interface RegisterState {\n  registering: boolean;\n  registered: boolean;\n  error: string;\n}\n\nconst initialState = {\n  registering: false,\n  registered: false,\n  error: '',\n};\n\nconst registerSlice = createSlice({\n  name: 'register',\n  initialState,\n  reducers: {\n    requested: (state) => ({ ...state, registering: true, error: '' }),\n    success: (state) => ({\n      ...state,\n      registered: true,\n      registering: false,\n      error: '',\n    }),\n    failed: (state, action: PayloadAction<string>) => ({\n      ...state,\n      registering: false,\n      registered: false,\n      error: action.payload,\n    }),\n    reset: (state) => ({\n      registered: false,\n      registering: false,\n      error: '',\n    }),\n  },\n});\n\nconst { actions, reducer } = registerSlice;\n\nexport const { requested, success, failed, reset } = actions;\nexport default reducer;\n\nexport const registerUser = (\n  username: string,\n  email: string,\n  password: string,\n) => async (dispatch: any) => {\n  dispatch(Request.requested({ redirect: '/login' }));\n  dispatch(requested());\n\n  try {\n    const user = await AuthService.registerUser({\n      username,\n      email,\n      password,\n    });\n    if (user.id) {\n      dispatch(\n        Request.finished({ message: 'User was successfully registered' }),\n      );\n      dispatch(success());\n    } else {\n      dispatch(Request.error({ error: 'Try again later' }));\n      dispatch(failed(\"Something wen't wrong\"));\n    }\n  } catch (error) {\n    dispatch(Request.error({ error: error.toString() }));\n    dispatch(failed(error.toString()));\n  }\n};\n","import React from 'react';\n\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport './RegisterPage.scss';\nimport { useHistory } from 'react-router';\nimport { registerUser, RegisterState } from '../../library/reducers/register';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst RegisterSchema = Yup.object().shape({\n  username: Yup.string()\n    .required('Username is required')\n    .min(2, 'Your Username is too short'),\n  email: Yup.string()\n    .required('Email is required')\n    .email('Your email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(8, 'Your password is too short'),\n});\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n  return (\n    <div className='register-page'>\n      <div className='container'>\n        <div className='heading'>\n          <h4 className='register-title'>Register</h4>\n          <span className='register-close'>\n            <span className='close-menu' onClick={() => history.goBack()}>\n              <div className='close-icon-base'></div>\n            </span>\n          </span>\n        </div>\n        <Formik\n          initialValues={{\n            username: '',\n            email: '',\n            password: '',\n          }}\n          validationSchema={RegisterSchema}\n          onSubmit={(values) => {\n            dispatch(\n              registerUser(values.username, values.email, values.password),\n            );\n          }}\n        >\n          {({ touched, errors }) => (\n            <Form className='register-form'>\n              <div className='username'>\n                <Field name='username' placeholder='Username' />\n                {errors.username && touched.username ? (\n                  <div className='error'>{errors.username}</div>\n                ) : null}\n              </div>\n              <div className='email'>\n                <Field name='email' type='email' placeholder='Email' />\n                {errors.email && touched.email ? (\n                  <div className='error'>{errors.email}</div>\n                ) : null}\n              </div>\n              <div className='password'>\n                <Field name='password' placeholder='Password' type='password' />\n                {errors.password && touched.password ? (\n                  <div className='error'>{errors.password}</div>\n                ) : null}\n              </div>\n              <button type='submit'>REGISTER</button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport * as Request from './request';\nimport * as Auth from './auth';\nimport { AuthService } from '../../services/auth.service';\n\nexport interface LoginState {\n  loggingIn: boolean;\n  loggedIn: boolean;\n  error: string;\n}\n\nconst initialState: LoginState = {\n  loggingIn: false,\n  loggedIn: false,\n  error: '',\n};\n\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    requested: (state) => ({\n      loggingIn: true,\n      ...initialState,\n    }),\n    success: (state) => ({\n      loggedIn: true,\n      ...initialState,\n    }),\n    failure: (state, action: PayloadAction<{ error: string }>) => ({\n      error: action.payload.error,\n      ...initialState,\n    }),\n    reset: (state) => ({\n      ...initialState,\n    }),\n  },\n});\n\nconst { actions, reducer } = loginSlice;\nexport const { requested, success, failure, reset } = actions;\nexport default reducer;\n\nexport const login = (username: string, password: string) => {\n  return async (dispatch: any) => {\n    dispatch(Request.requested({ redirect: '/home' }));\n    dispatch(requested());\n\n    try {\n      const user = await AuthService.login({\n        username,\n        password,\n      });\n      dispatch(Auth.authenticated(user));\n      dispatch(Request.finished({ message: 'You were logged in' }));\n      dispatch(success());\n    } catch (error) {\n      dispatch(Request.error({ error: error.toString() }));\n      dispatch(failure(error.toString()));\n    }\n  };\n};\n","import React from 'react';\n\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport './LoginPage.scss';\nimport { Router, useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../library/reducers/login';\n\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string()\n    .required('Username is required')\n    .min(2, 'Your Username is too short'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(8, 'Your password is too short'),\n});\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  return (\n    <div className='login-page'>\n      <div className='container'>\n        <div className='heading'>\n          <h4 className='login-title'>Login</h4>\n          <span className='login-close'>\n            <span className='close-menu' onClick={() => history.goBack()}>\n              <div className='close-icon-base'></div>\n            </span>\n          </span>\n        </div>\n        <div className='login-errors'></div>\n        <Formik\n          initialValues={{\n            username: '',\n            password: '',\n          }}\n          validationSchema={LoginSchema}\n          onSubmit={(values) => {\n            dispatch(login(values.username, values.password));\n          }}\n        >\n          {({ touched, errors }) => (\n            <Form className='login-form'>\n              <div className='username'>\n                <Field name='username' placeholder='Username' />\n                {errors.username && touched.username ? (\n                  <div className='error'>{errors.username}</div>\n                ) : null}\n              </div>\n              <div className='password'>\n                <Field name='password' placeholder='Password' type='password' />\n                {errors.password && touched.password ? (\n                  <div className='error'>{errors.password}</div>\n                ) : null}\n              </div>\n              <button type='submit'>LOGIN</button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport './Field.scss';\nimport { useSelector } from 'react-redux';\nimport { ActiveFieldState } from '../../library/reducers/activeField';\nimport { RoundState } from '../../library/reducers/round';\nimport { CounterState } from '../../library/reducers/counter';\n\nconst Field: React.FC<{ index: number }> = (props) => {\n  const number = props.index + 1;\n  const { field } = useSelector(\n    (state: { ActiveField: ActiveFieldState }) => state.ActiveField,\n  );\n\n  const { count } = useSelector(\n    (state: { Counter: CounterState }) => state.Counter,\n  );\n\n  const active = field === number;\n  return (\n    <div\n      key={props.index + count}\n      className={active ? 'field active' : 'field'}\n    >\n      {number}\n    </div>\n  );\n};\n\nexport default Field;\n","import React, { useEffect } from 'react';\nimport './Grid.scss';\nimport Field from '../field/Field';\n\nexport interface GridProps {\n  rows: number;\n  columns: number;\n}\n\nconst Grid: React.FC<GridProps> = (props) => {\n  let fields: number[] = [];\n  let count = 0;\n  for (let i = 0; i < props.rows * props.columns; i++) {\n    count++;\n    fields.push(count);\n  }\n\n  const renderFields = () => {\n    return fields.map((field, index) => {\n      return <Field index={index} />;\n    });\n  };\n\n  return (\n    <div className='grid'>\n      {\n        <div\n          className='container'\n          style={{\n            gridTemplateRows: `repeat(${props.rows}, 1fr)`,\n            gridTemplateColumns: `repeat(${props.columns}, 1fr)`,\n          }}\n        >\n          {renderFields()}\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default Grid;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FieldAttemptState } from '../../library/reducers/field-attempt';\nimport { SoundAttemptState } from '../../library/reducers/sound-attempt';\nimport './Score.scss';\nimport * as ScoreActions from '../../library/reducers/score';\n\nconst Score = () => {\n  const dispatch = useDispatch();\n  const fieldAttempts = useSelector(\n    (state: { FieldAttempt: FieldAttemptState }) => state.FieldAttempt.attempts,\n  );\n  const soundAttempts = useSelector(\n    (state: { SoundAttempt: SoundAttemptState }) => state.SoundAttempt.attempts,\n  );\n\n  const { score } = useSelector(\n    (state: { Score: ScoreActions.ScoreState }) => state.Score,\n  );\n\n  useEffect(() => {\n    let s = 0;\n    const factor = 10; //TODO: extract from game settings.\n    fieldAttempts.forEach((attempt) => {\n      if (attempt.success) {\n        s += attempt.nback * factor;\n      } else {\n        s -= attempt.nback * factor;\n      }\n    });\n\n    soundAttempts.forEach((attempt) => {\n      if (attempt.success) {\n        s += attempt.nback * factor;\n      } else {\n        s -= attempt.nback * factor;\n      }\n    });\n\n    dispatch(ScoreActions.add(s));\n  }, [fieldAttempts, soundAttempts]);\n\n  return <div>Score: {score}</div>;\n};\n\nexport default Score;\n","import React from 'react';\nimport './ProgressBar.scss';\n\nexport const ProgressBar = (props: {\n  indeterminate?: boolean;\n  query?: boolean;\n  timed?: boolean;\n  duration?: number;\n  progress?: number;\n}) => {\n  const renderType = () => {\n    if (props.indeterminate == true) {\n      return <div className='indeterminate'></div>;\n    } else if (props.indeterminate == false) {\n      return (\n        <div\n          className='determinate'\n          style={{ width: `${props.progress as number}%` }}\n        ></div>\n      );\n    } else if (props.timed == true) {\n      return (\n        <div\n          className='timed'\n          style={{\n            width: `${props.progress as number}%`,\n            transition: `width ${props.duration}s linear`,\n          }}\n        ></div>\n      );\n    }\n\n    return null;\n  };\n\n  return <div className='progress-bar'>{renderType()}</div>;\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport './Game.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  GameSettingsState,\n  GameRunningState,\n  beginGame,\n} from '../../library/reducers/gameSettings';\nimport Grid from '../grid/Grid';\nimport Score from '../score/Score';\nimport ProgressBar from '../progress/progress-bar/ProgressBar';\nimport { CounterState } from '../../library/reducers/counter';\nimport { NBackState } from '../../library/reducers/nback';\nimport * as FieldAttempt from '../../library/reducers/field-attempt';\nimport * as SoundAttempt from '../../library/reducers/sound-attempt';\n\nconst Game: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { state, widthHeight, timerDuration } = useSelector(\n    (state: { Settings: GameSettingsState }) => state.Settings,\n  );\n\n  const count = useSelector(\n    (state: { Counter: CounterState }) => state.Counter.count,\n  );\n\n  const { n } = useSelector((state: { NBack: NBackState }) => state.NBack);\n\n  const barProgress = count % 2 == 0 ? 0 : 100;\n\n  if (state == GameRunningState.Finished) {\n    return (\n      <div className='game-finished'>\n        <div className='game-banner'>\n          <span className='game-title'>Play the game</span>\n          <button\n            className='game-play-button'\n            onClick={() => dispatch(beginGame(3, 3))}\n          >\n            Play\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className='game-running'>\n      <div className='counter'>\n        Counter <span className='counter-letter'>N</span>={n}\n      </div>\n      <div className='grid'>\n        <Grid rows={widthHeight} columns={widthHeight}></Grid>\n      </div>\n      <div className='buttons'>\n        <button\n          className='place'\n          onClick={() => dispatch(FieldAttempt.attempt())}\n        >\n          Place\n        </button>\n        <button\n          className='sound'\n          onClick={() => dispatch(SoundAttempt.attempt())}\n        >\n          Sound\n        </button>\n      </div>\n      <div className='progress'>\n        <ProgressBar\n          timed={true}\n          duration={timerDuration - 0.2}\n          progress={barProgress}\n        ></ProgressBar>\n      </div>\n      <div className='score'>\n        <Score></Score>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport './GamePage.scss';\nimport Game from '../../components/game/Game';\n\nconst GamePage = () => {\n  return (\n    <div className='game-page'>\n      <div className='container'>\n        <Game></Game>\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ScoresState, getScores } from '../../library/reducers/scores';\nimport { SocketService } from '../../services/socket.service';\n\nimport './ScoresPage.scss';\n\nconst ScoresPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getScores());\n\n    SocketService.integrateCallbacks(dispatch);\n  }, []);\n\n  const { scores } = useSelector(\n    (state: { Scores: ScoresState }) => state.Scores,\n  );\n\n  return (\n    <div className='scores-page'>\n      {scores.map((score, i) => (\n        <>\n          <div className='score' key={i} style={{ margin: '0 auto' }}>\n            <span className='ranking'>{i + 1}</span>\n            <span className='amount'>{score.score}</span>\n            <span className='username'>{score.username}</span>\n          </div>\n          {scores.length - 1 !== i ? <div className='divider'></div> : null}\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default ScoresPage;\n","import React, { useEffect } from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\nimport { HomePage } from '../../pages/home.page/HomePage';\nimport { Menu } from '../menu/Menu';\nimport './Body.scss';\nimport RegisterPage from '../../pages/register.page/RegisterPage';\nimport LoginPage from '../../pages/login.page/LoginPage';\nimport GamePage from '../../pages/game.page/GamePage';\nimport ScoresPage from '../../pages/scores.page/ScoresPage';\nimport { useSelector } from 'react-redux';\nimport { AuthState } from '../../library/reducers/auth';\nimport { SocketService } from '../../services/socket.service';\n\nconst Body: React.FC = () => {\n  SocketService.openSocket();\n\n  return (\n    <div className='body-container'>\n      <Menu></Menu>\n      <Switch>\n        <Route path='/play'>\n          <GamePage></GamePage>\n        </Route>\n        <Route path='/scores'>\n          <ScoresPage></ScoresPage>\n        </Route>\n        <Route path='/login'>\n          <LoginPage></LoginPage>\n        </Route>\n        <Route path='/register'>\n          <RegisterPage></RegisterPage>\n        </Route>\n        <Route path='/*'>\n          <HomePage></HomePage>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Body;\n","import Menu from './menu';\nimport Register from './register';\nimport Request from './request';\nimport Login from './login';\nimport Auth from './auth';\nimport Settings from './gameSettings';\nimport ActiveField from './activeField';\nimport Counter from './counter';\nimport Round from './round';\nimport NBack from './nback';\nimport FieldAttempt from './field-attempt';\nimport ActiveSound from './activeSound';\nimport SoundAttempt from './sound-attempt';\nimport Score from './score';\nimport Scores from './scores';\nimport { combineReducers } from '@reduxjs/toolkit';\n\nconst reducer = combineReducers({\n  Menu,\n  Register,\n  Request,\n  Login,\n  Auth,\n  Settings,\n  ActiveField,\n  ActiveSound,\n  Counter,\n  Round,\n  NBack,\n  FieldAttempt,\n  SoundAttempt,\n  Score,\n  Scores,\n});\nexport type RootState = ReturnType<typeof reducer>;\nexport default reducer;\n","import logger from 'redux-logger';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport Reducers from './reducers';\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: Reducers,\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\nexport type AppDispatch = typeof store.dispatch;\n","import React, { useEffect } from 'react';\nimport './Progress.scss';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { RequestState } from '../../library/reducers/request';\nimport { render } from 'react-dom';\nimport * as Request from '../../library/reducers/request';\nimport { ProgressBar } from './progress-bar/ProgressBar';\nimport { useHistory } from 'react-router';\nimport { timeout } from 'q';\n\nexport const Progress = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const request: RequestState = useSelector((state: any) => state.Request);\n\n  const resetMessage = () => {\n    setTimeout(() => {\n      dispatch(Request.reset());\n    }, 5000);\n  };\n\n  useEffect(() => {\n    if (request.finished && request.success) {\n      setTimeout(() => {\n        history.push(request.redirect);\n      }, 1000);\n      resetMessage();\n    } else if (request.finished && request.failed) {\n      resetMessage();\n    }\n  }, [request.success]);\n\n  const renderText = () => {\n    return <p className='text'>{request.message}</p>;\n  };\n\n  const render = () => {\n    if (request.requesting) {\n      return (\n        <div className='in-progress'>\n          <ProgressBar />\n        </div>\n      );\n    } else if (request.finished && !request.failed) {\n      return <div className='finished'>{renderText()}</div>;\n    } else if (request.failed) {\n      return <div className='failed'>{renderText()}</div>;\n    } else {\n      return null;\n    }\n  };\n\n  if (request.requesting || request.finished || request.failed) {\n    return <div className='progress'>{render()}</div>;\n  } else return null;\n};\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport Navbar from './components/navbar/Navbar';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Body from './components/body/Body';\nimport store from './library/store';\nimport { Provider, useSelector } from 'react-redux';\nimport { Progress } from './components/progress/Progress';\nimport { SocketService } from './services/socket.service';\nimport { AuthState } from './library/reducers/auth';\n\nconst App: React.FC = () => {\n  return (\n    <div className='react-root'>\n      <Provider store={store}>\n        <Router>\n          <div className='root-container'>\n            <div className='root-navbar'>\n              <Navbar></Navbar>\n            </div>\n            <div className='root-body'>\n              <Body></Body>\n            </div>\n            <div className='root-progress'>\n              <Progress />\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}